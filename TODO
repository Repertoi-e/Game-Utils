---------------------------------------------------------------------------------
- Time?
- Random?
---------------------------------------------------------------------------------
File I/O and Reader/Writer implementations
(File mapping too)
---------------------------------------------------------------------------------
API for watching directory changes
---------------------------------------------------------------------------------
Owned_Memory, Stack_Dynamic_Memory, etc.
---------------------------------------------------------------------------------
rework get_pointer_to_code_point_at and get_translated... to handle index == Length
(currently only few functions use them (those who use ranges), others have custom implementations)
---------------------------------------------------------------------------------
Make temporary allocator thread local
---------------------------------------------------------------------------------
The following things implemented in windows but not on posix yet:
  LSTD:
- os wallclock functions
- changes in console_reader/writer that remove virtual functions
- threads
- file handles
  LE:
- game loop and windows and events 
---------------------------------------------------------------------------------
Way to get monitor refresh rate (and possibly other system info)
---------------------------------------------------------------------------------
Replace LE's game loop with a platform inspecific one
---------------------------------------------------------------------------------
Sometimes, condition_variable test crashes
After running the program for a while, it seems like it's fixed by calling
the Delegate's destructor before deleting the Thread_Start_Info when finished
calling the thread function.
---------------------------------------------------------------------------------
Rewrite vendor libraries and reduce to the minimum needed
---------------------------------------------------------------------------------
At the moment every allocation has a 24 byte header (the Allocator it used and the size of the allocation)
This is done to make sure delete always uses the right allocator as well as provide convenience for the user.
(Calling delete no matter the context uses the right allocator etc...)

Maybe those 24 don't matter in today's world where computers have practically infinite RAM,
but it feels like it's too wasteful.
---------------------------------------------------------------------------------
Allow users to add more variables to Implicit_Context
Won't work with headers tho
---------------------------------------------------------------------------------
